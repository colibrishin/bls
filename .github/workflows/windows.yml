name: windows-bls_sharp

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  cpp-build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - run : git submodule update --init --recursive
    - name: Prepare MSVC
      # You may pin to the exact commit or the version.
      # uses: TheMrMilchmann/setup-msvc-dev@a03e54ab3bbe75ab9bd41f07cc5d30605e70625b
      uses: TheMrMilchmann/setup-msvc-dev@v2.0.0
      with:
        # The target architecture
        arch: x64
        # The path to the Visual Studio installation
        # vs-path: # optional
        # Windows SDK to use
        # sdk: # optional
        # Use Visual Studio libraries with Spectre mitigations
        spectre: true
        # VC++ compiler toolset version
        # toolset: # optional
        # Build for Universal Windows Platform
        # uwp: # optional
        # The environment variable to store the path to vcvarsall.bat in
        # export-path-to-vcvarsall: # optional
        # The environment variable to store the path to the Visual Studio installation in
        # export-path-to-vs: # optional
    - name: Build bls with MSVC
      run: Invoke-Expression -Command 'cmd.exe /C mklib.bat dll eth'
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: bls384_256.dll
        # A file, directory or wildcard pattern that describes what to upload
        path: bin/bls384_256.dll

  csharp-build-bls:
    needs : cpp-build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x
    - run: |
        cd ffi/cs
        dotnet restore bls.sln
    - name: Build
      run: |
        cd ffi/cs
        dotnet build bls.sln --configuration Release --no-restore
    - name: Copy BLS binary
      run: Copy-Item "./bls384_256.dll" --Destination "./bls-sharp.Tests/bin/Release/netstandard3.1/"
    - name: Test
      run: |
        cd ffi/cs
        dotnet test bls.sln --configuration Release --no-build --verbosity normal