name: macos-64-bls_sharp

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  cpp-build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - run : brew install clang-format@11 gmp
    - run : git submodule update --init --recursive
    - run : make -C ./mcl CXX=clang++ MCL_USE_LLVM=1 -j4
    - run : make BLS_ETH=1 CXX=clang++ -j4
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        # Artifact name
        name: libbls384_256.dylib
        # A file, directory or wildcard pattern that describes what to upload
        path: lib/libbls384_256.dylib

  csharp-build-bls:
    needs : cpp-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x
    - uses: actions/download-artifact@v3
      with:
        name: libbls384_256.dylib
        path: ./
    - name : Restore
      run: |
          cd ffi/cs
          dotnet restore bls.sln
    - name: Build
      run: |
        cd ffi/cs
        dotnet build bls.sln --configuration Release --no-restore
    - name: Copy BLS binary
      run: |
        ls -al
        cp ./libbls384_256.dylib ./ffi/cs/bls-sharp.Tests/bin/Release/netcoreapp3.1/
    - name: Test
      run: |
        cd ffi/cs
        dotnet test bls.sln --configuration Release --no-build --verbosity normal